openapi: 3.0.1
info:
  title: API ENERGISA
  description: ""
  version: 1.0.0
tags:
  - name: Faturamento
  - name: Atendimento
paths:
  /api/v1/pre-payment/qrcode:
    post:
      summary: Request Pix QrCode for recharge payment
      deprecated: false
      description: |-
        ### Clarify
        > 1、*Can the input parameter requestedValue and the output parameter paymentValue be different? I understand that the vending system should use requestedValue as the basis for token generation, but if paymentValue is less than requestedValue, should an error be reported?
        > 2、Does "cashbackValue" refer to the "Saldo Financeiro mês anterior" (Previous Month's Financial Balance) mentioned in RN65?
        > If that's the case, we need to implement "Controle e exibição de Saldo e Opções de Recarga" (Control and display of Balance and Recharge Options). However, no parameters associated with this option have been found in the payment interface (i.e., the current interface).*

         ### Answear
         **1.** The input parameter ***requestedValue*** and the output parameter ***paymentValue*** may be different. This occurs, for example, when the customer has a cashback from the last billing. In this case, the cashback amount is deducted from ***requestedValue***, resulting in a lower ***paymentValue***.  
         
           Regarding the generation of Tokens, we understand that they must be linked to the amount that will actually be recharged in the customer's meter. This is because, if the customer has debts to be settled, ORCA must reserve 10% of ***requestedValue***, allocating it to the debt settlement. The resulting difference will be used for the recharge.  
           
         Therefore, it is important to highlight that ***requestedValue***, ***paymentValue***, and ***Recharge Value*** may be different, depending on the existence of cashback and/or a reserve for debts.

         **Practical example:**
         
          ***requestedValue*** = R$ 150.00  
          ***cashbackValue*** = R$ 10.00  
          ***paymentValue*** = ***requestedValue*** – ***cashbackValue*** = R$ 140.00  
          ***debtTx.amt*** = ***requestedValue*** × 0.1 = R$ 15.00  
          ***Recharge Value*** = ***requestedValue*** – ***debtTx.amt*** = R$ 135.00  
          ***Original Credit Amt*** = Recharge Value + rounding = R$ 135.00 + R$ 0.30 = R$ 135.30 
          
          **Question:**
          
          It remains to be defined whether the generated Tokens should be associated with:  
          - **Recharge Value** ;
          - **Original Credit Amt** ; or 
          - **creditTx.amt** .
          
          
        **2.** The output parameter ***cashbackValue*** is controlled by Energisa. This value originates from the last billing, in cases where the customer's bill amount was lower than the recharge amount. Thus, when ORCA requests the generation of the QRCode, Energisa will verify if cashback is available. If it exists, the amount will be deducted from ***requestedValue***.  

        The ***cashbackValue*** will be sent to ORCA so that this information can be displayed in the customer's statement, showing that they paid a lower amount because they had a discount related to the cashback.

      tags:
        - Faturamento
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - companyId
                - meterNumber
                - requestedValue
                - uc
                - rechargeId
              type: object
              properties:
                companyId:
                  $ref: '#/components/schemas/CompanyId'
                  example: EMR
                meterNumber:
                  type: string
                  description: Meter number
                  example: 123456
                uc:
                  type: string
                  description: Energisa Customer Identifier (Consumer Unit)
                  example: "987654321"
                requestedValue:
                  type: number
                  description: Requested recharge value
                  format: decimal
                  example: 100.75
                exceedValue:
                  type: number
                  description: Excess balance recharge value
                  format: decimal
                  example: 10
                rechargeId:
                  type: string
                  description: Recharge Identifier generated by the requester
                  example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
                qrCodeImageSize:
                  type: integer
                  format: int32
                  minimum: 50
                  maximum: 512
                  description: Image size in pixels (between 50 and 512)
                  example: 256
            examples: {}
      responses:
        "200":
          description: QRCode generate successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  rechargeId:
                    type: string
                    description: Recharge Identifier generated by the requester
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
                  txQrCode:
                    type: string
                    description: EMV QRCode pix
                    example: 00020126580014br.gov.bcb.pix...
                  base64QrCode:
                    type: string
                    description: EMV QRCode pix image in base64
                    example: kwhbefkhwbkefbwkefbkwefwef...
                  paymentValue:
                    type: number
                    description: paymentValue = requestedValue - cashbackValue
                    format: decimal
                    example: 100.75
                  cashbackValue:
                    type: number
                    description: cashbackValue is controlled by Energisa. This value originates from the last billing, in cases where the customer's bill amount was lower than the recharge amount.
                      Thus, when ORCA requests the generation of the QRCode, Energisa will verify if cashback
                      is available. If it exists, the amount will be deducted from requestedValue.
                    format: decimal
                    example: 10
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "404":
          $ref: '#/components/responses/NotFoundQRCode'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/notification/low-balance:
    post:
      summary: Notify the alerts related to Pre-Payment Customer Balance
      deprecated: false
      description: |-
        ### Clarify
         1、We intend to delete fields companyId, uc, and companyId, as they are unnecessary in the notifications and are not what users need to care about.
         2、Added a new field timestamp.
        ### Answer:
         1、Company identifier. Required because each company has its own database, and this field allows the system to determine in which database the related meter is stored. It is assumed that the company code (companyId) is already registered in your systems and linked to each meter.
         
         2 - Ok
      tags:
        - Atendimento
      parameters: []
      requestBody:
        content:
          aplication/json:
            schema:
              required:
                - companyId
                - meterNumber
                - alertType
                - tresholdValue
                - timestamp
              type: object
              properties:
                companyId:
                  $ref: '#/components/schemas/CompanyId'
                  description: Company that owns the meter
                  example: EMR
                meterNumber:
                  type: string
                  example: 123456
                alertType:
                  type: string
                  description: Alert Type
                  enum:
                    - level1
                    - level2
                    - level3
                    - exhausted
                  deprecated: true
                  example: level1
                tresholdValue:
                  type: number
                  format: decimal
                  description: Threshold Value that triggered the alert
                  example: 20
                timestamp:
                  type: integer
                  description: A timestamp that represents the time when a low-balance event occurred
                  format: long
            examples: {}
      responses:
        "200":
          description: Notification successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success detail
                    example: Notification successfully registered.
                  correlationId:
                    type: string
                    description: Correlation id registered in the notification (just for checking if necessary)
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/session/{uuid}:
    get:
      summary: Validade unique session key and return linked customer data
      deprecated: false
      description: |-
        ### Clarify
        Could you explain this interface, we want to know how to use it and why use it
             
        This endpoint will be used in the integration of the web page that your team will develop.  

        The basic idea is:  
        - The customer will access a web page through a URL such as:  
          `www.paginawebhexing.com/uuid=xxx...`  
        - When the page is opened with this UUID in the URL, your system should call this endpoint, passing the same UUID.  
        - The endpoint validates the UUID and returns the necessary data for building the page.  

        The exact structure and set of returned data are still being defined.  
        The purpose of this endpoint is to ensure that the UUID is valid and to provide information needed to render the page correctly.  

        A more complete specification of the integration flow (including response fields and data mapping) will be provided later.
      tags:
        - Atendimento
      parameters:
        - name: uuid
          in: path
          description: Unique temporary session key
          required: true
          example: ""
          schema:
            type: string
      responses:
        "200":
          description: Valid session and return linked customer data
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: object
                    properties:
                      meterNumber:
                        type: string
                        example: "123456"
                      name:
                        type: string
                        example: João da Silva
                      address:
                        type: string
                        example: Rua Exemplo, 123
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "410":
          $ref: '#/components/responses/Gone'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/notification/recharge-status:
    post:
      summary: Notify the result of the recharge issuance to the meter
      deprecated: false
      description: |-
        After the vending system issues the token to the meter, it waits for the meter's communication result. Once vending receives the result, it returns it to Energisa.

        ### Clarify
        Energisa Question - We would like to know, on average, how long it takes to receive this notification after the first payment confirmation.
      tags:
        - Atendimento
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rechargeStatus:
                  type: boolean
                  description: Recharge to Meter Status
                msg:
                  type: string
                msgId:
                  type: string
                  description: Same as QRCode interface
                  example: 3F2504E0-4F89-11D3-9A0C-0305E82C3301
                meterNumber:
                  type: string
                  description: Meter number
                  example: "123456789"
                units:
                  type: number
                  description: kWh
                  example: 115
                tokens:
                  type: string
                  description: If the issuance fails, the user can input the token through CIU
                  example: "783929502001239345673"
              required:
                - rechargeStatus
                - units
                - meterNumber
                - tokens
            examples: {}
      responses:
        "200":
          description: Recharge successfully completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success detail
                    example: Notification successfully registered.
                  correlationId:
                    type: string
                    description: Correlation id registered in the notification (just for checking if necessary)
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "401":
          $ref: '#/components/responses/Unauthorized'
        "404":
          $ref: '#/components/responses/NotFound'
        "409":
          $ref: '#/components/responses/Conflict'
        "504":
          $ref: '#/components/responses/GatewayTimeout'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  '/{version}/Atendimento/{CodigoEmpresaWeb}/{Cdc}/{DigitoVerificador}/{TipoInteracao}/{CodigoAcao}':
    get:
      summary: Gera protocolo de atendimento ao cliente
      deprecated: false
      description: Gera protocolo de atendimento ao cliente.
      tags:
        - Atendimento
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: CodigoEmpresaWeb
          in: path
          required: true
          description: Empresa que consta o numero de cdc.
          schema:
            type: integer
            format: int32
        - name: Cdc
          in: path
          required: true
          description: Parte principal da identificação da UC.
          schema:
            type: integer
            format: int64
        - name: DigitoVerificador
          in: path
          required: true
          description: Dígito verificador da UC.
          schema:
            type: integer
            format: int32
        - name: TipoInteracao
          in: path
          required: true
          description: Tipo da interação a ser solicitada.
          schema:
            type: integer
            format: int32
        - name: CodigoAcao
          in: path
          required: true
          description: Ação informada para abertura do protocolo.
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "OK: Interação registrada com sucesso."
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RetornoProtocoloResultadoObjeto'
        "400":
          description: "Requisição inválida."
        "401":
          description: Acesso não autorizado.
        "403":
          description: Usuário não autenticado.
        "405":
          description: WebService desabilitado
        "412":
          description: "ERRO: Não foi possível gerar a interação."
        "500":
          description: "Ocorreu um erro inesperado."
  '/{version}/UsuarioEmpresaParceira':
    post:
      summary: Realiza a autenticação de clientes externos da API
      deprecated: false
      tags:
        - Atendimento
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Objeto contendo credenciais (token de acesso e senha de acesso)
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredenciaisUsuarioEmpresaParceiraApi'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CredenciaisUsuarioEmpresaParceiraApi'
      responses:
        "200":
          description: OK
        "400":
          description: Requisição inválida.
        "412":
          description: Erro de validação de parâmetros de entrada.
        "500":
          description: Ocorreu um erro inesperado.
components:
  schemas: 
    CompanyId:
      type: string
      description: Energisa Company Identifier
      enum: [EMR, ESE, EPB, ETO, EMT, EMS, ESS, EAC, ERO]
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
              description: Error code identifier
              example: METER_NOT_REGISTERED
            message:
              type: string
              description: Human-readable error message
              example: Medidor não está registrado na base da Energisa
            detail:
              type: string
              description: Detailed error description
              example: O medidor 123456 não foi encontrado na base de dados da empresa EMR
            timestamp:
              type: string
              format: date-time
              description: Error timestamp in ISO 8601 format
              example: "2025-10-06T14:30:00Z"
            retryable:
              type: boolean
              description: Indicates if the request can be retried
              example: false
    RetornoProtocoloResultadoObjeto:
      type: object
      properties:
        categoria:
          type: string
          nullable: true
          readOnly: true
    CredenciaisUsuarioEmpresaParceiraApi:
      type: object
      properties:
        tokenAcessoApi:
          type: string
          nullable: true
        senhaAcessoApi:
          type: string
          nullable: true
  responses:
    BadRequest:
      description: Bad Request. The request could not be understood or was missing required parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            InvalidParameter:
              summary: Missing or invalid parameter
              value:
                error:
                  code: INVALID_PARAMETER
                  message: Parâmetro obrigatório ausente ou inválido
                  detail: O campo 'meterNumber' é obrigatório
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidMeterNumber:
              summary: Invalid meter number format
              value:
                error:
                  code: INVALID_METER_NUMBER
                  message: Número de medidor inválido
                  detail: O formato do número do medidor está incorreto
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidCompanyId:
              summary: Invalid company identifier
              value:
                error:
                  code: INVALID_COMPANY_ID
                  message: Company ID inválido
                  detail: O Company ID fornecido não é válido
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidAlertType:
              summary: Invalid alert type (low-balance endpoint)
              value:
                error:
                  code: INVALID_ALERT_TYPE
                  message: Tipo de alerta inválido
                  detail: O tipo de alerta deve ser um dos seguintes - level1, level2, level3, exhausted
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidThresholdValue:
              summary: Invalid threshold value (low-balance endpoint)
              value:
                error:
                  code: INVALID_THRESHOLD_VALUE
                  message: Valor de threshold inválido
                  detail: O valor de threshold deve ser um número positivo
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidRechargeId:
              summary: Invalid recharge ID (recharge-status endpoint)
              value:
                error:
                  code: INVALID_RECHARGE_ID
                  message: ID de recarga inválido
                  detail: O msgId fornecido não possui um formato válido
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidUnits:
              summary: Invalid units value (recharge-status endpoint)
              value:
                error:
                  code: INVALID_UNITS
                  message: Valor de unidades (kWh) inválido
                  detail: O valor de unidades deve ser um número positivo
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidTokenFormat:
              summary: Invalid token format (recharge-status endpoint)
              value:
                error:
                  code: INVALID_TOKEN_FORMAT
                  message: Formato de token inválido
                  detail: O formato do token não corresponde ao padrão esperado
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidUuidFormat:
              summary: Invalid UUID format (session endpoint)
              value:
                error:
                  code: INVALID_UUID_FORMAT
                  message: Formato de UUID inválido
                  detail: O UUID fornecido não está no formato válido. Esperado - formato UUID v4
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    
    Unauthorized:
      description: Unauthorized - authentication is required or has failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            MissingAuth:
              summary: Missing authentication credentials
              value:
                error:
                  code: MISSING_AUTHENTICATION
                  message: Autenticação não fornecida
                  detail: As credenciais de autenticação são obrigatórias para acessar este endpoint
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InvalidToken:
              summary: Invalid authentication token
              value:
                error:
                  code: INVALID_TOKEN
                  message: Token de autenticação inválido
                  detail: O token fornecido não é válido ou está mal formatado
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            ExpiredToken:
              summary: Expired authentication token
              value:
                error:
                  code: EXPIRED_TOKEN
                  message: Token de autenticação expirado
                  detail: O token de autenticação expirou e precisa ser renovado
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            InsufficientPermissions:
              summary: Insufficient permissions
              value:
                error:
                  code: INSUFFICIENT_PERMISSIONS
                  message: Permissões insuficientes
                  detail: O usuário autenticado não possui permissões para acessar este recurso
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    NotFoundQRCode:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            MeterNotRegistered:
              summary: Meter not registered in Energisa database
              value:
                error:
                  code: METER_NOT_REGISTERED
                  message: Medidor não está registrado na base da Energisa
                  detail: O medidor 123456 não foi encontrado na base de dados da empresa EMR
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            CompanyNotFound:
              summary: Company not found
              value:
                error:
                  code: COMPANY_NOT_FOUND
                  message: Empresa não encontrada
                  detail: A empresa com o código fornecido não existe
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            CustomerNotFound:
              summary: Customer (UC) not found
              value:
                error:
                  code: CUSTOMER_NOT_FOUND
                  message: Cliente (UC) não encontrado
                  detail: O cliente com a UC fornecida não foi encontrado no sistema
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            MeterNotRegistered:
              summary: Meter not registered in Energisa database
              value:
                error:
                  code: METER_NOT_REGISTERED
                  message: Medidor não está registrado na base da Energisa
                  detail: O medidor 123456 não foi encontrado na base de dados da empresa EMR
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            CompanyNotFound:
              summary: Company not found
              value:
                error:
                  code: COMPANY_NOT_FOUND
                  message: Empresa não encontrada
                  detail: A empresa com o código fornecido não existe
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            CustomerNotFound:
              summary: Customer (UC) not found
              value:
                error:
                  code: CUSTOMER_NOT_FOUND
                  message: Cliente (UC) não encontrado
                  detail: O cliente com a UC fornecida não foi encontrado no sistema
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            RechargeNotFound:
              summary: Recharge not found (recharge-status endpoint)
              value:
                error:
                  code: RECHARGE_NOT_FOUND
                  message: Recarga não encontrada
                  detail: A recarga com msgId fornecido não existe nos registros da Energisa
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            UuidNotFound:
              summary: UUID not found (session endpoint)
              value:
                error:
                  code: UUID_NOT_FOUND
                  message: UUID não encontrado
                  detail: Não existe uma sessão associada ao UUID fornecido
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    
    Conflict:
      description: Conflict with current state of the resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            DuplicateNotification:
              summary: Duplicate notification (low-balance endpoint)
              value:
                error:
                  code: DUPLICATE_NOTIFICATION
                  message: Notificação duplicada
                  detail: Já existe uma notificação para este medidor com o mesmo timestamp e alertType
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            DuplicateStatusNotification:
              summary: Duplicate status notification (recharge-status endpoint)
              value:
                error:
                  code: DUPLICATE_STATUS_NOTIFICATION
                  message: Notificação de status já recebida
                  detail: Uma notificação de status já foi recebida para esta recarga
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
            RechargeAlreadyCompleted:
              summary: Recharge already completed (recharge-status endpoint)
              value:
                error:
                  code: RECHARGE_ALREADY_COMPLETED
                  message: Recarga já foi completada
                  detail: O status desta recarga já foi registrado anteriormente como concluída
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    
    Gone:
      description: Gone - resource existed but is no longer available (expired)
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            UuidExpired:
              summary: UUID expired (session endpoint)
              value:
                error:
                  code: UUID_EXPIRED
                  message: UUID expirado
                  detail: A sessão associada a este UUID expirou. O tempo de validade é de 5 minutos
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: false
    
    GatewayTimeout:
      description: Gateway Timeout - upstream service did not respond in time
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            NotificationProcessingTimeout:
              summary: Timeout processing notification
              value:
                error:
                  code: NOTIFICATION_PROCESSING_TIMEOUT
                  message: Timeout ao processar notificação
                  detail: O sistema não conseguiu processar a notificação dentro do tempo limite
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: true
            DatabaseTimeout:
              summary: Database timeout
              value:
                error:
                  code: DATABASE_TIMEOUT
                  message: Timeout ao acessar banco de dados
                  detail: O banco de dados da empresa não respondeu dentro do tempo limite
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: true
            SmsServiceTimeout:
              summary: SMS service timeout (low-balance endpoint)
              value:
                error:
                  code: SMS_SERVICE_TIMEOUT
                  message: Timeout ao enviar SMS/notificação ao cliente
                  detail: O serviço de SMS não respondeu dentro do tempo limite
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: true
            CustomerNotificationTimeout:
              summary: Customer notification timeout (recharge-status endpoint)
              value:
                error:
                  code: CUSTOMER_NOTIFICATION_TIMEOUT
                  message: Timeout ao notificar cliente
                  detail: Não foi possível notificar o cliente sobre o resultado da recarga dentro do tempo limite
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: true
    
    InternalServerError:
      description: Internal Server Error. An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            InternalError:
              summary: Generic internal server error
              value:
                error:
                  code: INTERNAL_ERROR
                  message: Erro interno do servidor
                  detail: Ocorreu um erro inesperado ao processar a requisição
                  timestamp: "2025-10-06T14:30:00Z"
                  retryable: true
  securitySchemes: {}
servers:
  - url: http://dev-cn.your-api-server.com
    description: Development Environment
security: []