openapi: 3.0.1
info:
  title: API ENERGISA
  description: ""
  version: 1.0.0
tags:
  - name: Faturamento
  - name: Atendimento
paths:
  /api/v1/pre-payment/qrcode:
    post:
      summary: Request Pix QrCode for recharge payment
      deprecated: false
      description: |-
        ### Clarify
        > 1、*Can the input parameter requestedValue and the output parameter paymentValue be different? I understand that the vending system should use requestedValue as the basis for token generation, but if paymentValue is less than requestedValue, should an error be reported?
        > 2、Does "cashbackValue" refer to the "Saldo Financeiro mês anterior" (Previous Month's Financial Balance) mentioned in RN65?
        > If that's the case, we need to implement "Controle e exibição de Saldo e Opções de Recarga" (Control and display of Balance and Recharge Options). However, no parameters associated with this option have been found in the payment interface (i.e., the current interface).*

         ### Answear
         **1.** The input parameter ***requestedValue*** and the output parameter ***paymentValue*** may be different. This occurs, for example, when the customer has a cashback from the last billing. In this case, the cashback amount is deducted from ***requestedValue***, resulting in a lower ***paymentValue***.  
         
           Regarding the generation of Tokens, we understand that they must be linked to the amount that will actually be recharged in the customer’s meter. This is because, if the customer has debts to be settled, ORCA must reserve 10% of ***requestedValue***, allocating it to the debt settlement. The resulting difference will be used for the recharge.  
           
         Therefore, it is important to highlight that ***requestedValue***, ***paymentValue***, and ***Recharge Value*** may be different, depending on the existence of cashback and/or a reserve for debts.

         **Practical example:**
         
          ***requestedValue*** = R$ 150.00  
          ***cashbackValue*** = R$ 10.00  
          ***paymentValue*** = ***requestedValue*** – ***cashbackValue*** = R$ 140.00  
          ***debtTx.amt*** = ***requestedValue*** × 0.1 = R$ 15.00  
          ***Recharge Value*** = ***requestedValue*** – ***debtTx.amt*** = R$ 135.00  
          ***Original Credit Amt*** = Recharge Value + rounding = R$ 135.00 + R$ 0.30 = R$ 135.30 
          
          **Question:**
          
          It remains to be defined whether the generated Tokens should be associated with:  
          - **Recharge Value** ;
          - **Original Credit Amt** ; or 
          - **creditTx.amt** .
          
          
        **2.** The output parameter ***cashbackValue*** is controlled by Energisa. This value originates from the last billing, in cases where the customer’s bill amount was lower than the recharge amount. Thus, when ORCA requests the generation of the QRCode, Energisa will verify if cashback is available. If it exists, the amount will be deducted from ***requestedValue***.  

        The ***cashbackValue*** will be sent to ORCA so that this information can be displayed in the customer’s statement, showing that they paid a lower amount because they had a discount related to the cashback.

      tags:
        - Faturamento
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              required:
                - companyId
                - meterNumber
                - requestedValue
                - uc
                - rechargeId
              type: object
              properties:
                companyId:
                  $ref: '#/components/schemas/CompanyId'
                  example: EMR
                meterNumber:
                  type: string
                  description: Meter number
                  example: 123456
                uc:
                  type: string
                  description: Energisa Customer Identifier (Consumer Unit)
                  example: "987654321"
                requestedValue:
                  type: number
                  description: Requested recharge value
                  format: decimal
                  example: 100.75
                rechargeId:
                  type: string
                  description: Recharge Identifier generated by the requester
                  example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
                qrCodeImageSize:
                  type: integer
                  format: int32
                  minimum: 50
                  maximum: 512
                  description: Image size in pixels (between 50 and 512)
                  example: 256
            examples: {}
      responses:
        "200":
          description: QRCode generate successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  rechargeId:
                    type: string
                    description: Recharge Identifier generated by the requester
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
                  txQrCode:
                    type: string
                    description: EMV QRCode pix
                    example: 00020126580014br.gov.bcb.pix...
                  base64QrCode:
                    type: string
                    description: EMV QRCode pix image in base64
                    example: kwhbefkhwbkefbwkefbkwefwef...
                  paymentValue:
                    type: number
                    description: paymentValue = requestedValue - cashbackValue
                    format: decimal
                    example: 100.75
                  cashbackValue:
                    type: number
                    description: cashbackValue is controlled by Energisa. This value originates from the last billing, in cases where the customer’s bill amount was lower than the recharge amount.
                      Thus, when ORCA requests the generation of the QRCode, Energisa will verify if cashback
                      is available. If it exists, the amount will be deducted from requestedValue.
                    format: decimal
                    example: 10
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/notification/low-balance:
    post:
      summary: Notify the alerts related to Pre-Payment Customer Balance
      deprecated: false
      description: |-
        ### Clarify
         1、We intend to delete fields companyId, uc, and companyId, as they are unnecessary in the notifications and are not what users need to care about.
         2、Added a new field timestamp.
        ### Answer:
         1、Company identifier. Required because each company has its own database, and this field allows the system to determine in which database the related meter is stored. It is assumed that the company code (companyId) is already registered in your systems and linked to each meter.
         
         2 - Ok
      tags:
        - Atendimento
      parameters: []
      requestBody:
        content:
          aplication/json:
            schema:
              required:
                - companyId
                - meterNumber
                - alertType
                - tresholdValue
                - timestamp
              type: object
              properties:
                companyId:
                  $ref: '#/components/schemas/CompanyId'
                  description: Company that owns the meter
                  example: EMR
                meterNumber:
                  type: string
                  example: 123456
                alertType:
                  type: string
                  description: Alert Type
                  enum:
                    - level1
                    - level2
                    - level3
                    - exhausted
                  deprecated: true
                  example: level1
                tresholdValue:
                  type: number
                  format: decimal
                  description: Threshold Value that triggered the alert
                  example: 20
                timestamp:
                  type: integer
                  description: A timestamp that represents the time when a low-balance event occurred
                  format: long
            examples: {}
      responses:
        "200":
          description: Notification successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success detail
                    example: Notification successfully registered.
                  correlationId:
                    type: string
                    description: Correlation id registered in the notification (just for checking if necessary)
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/session/{uuid}:
    get:
      summary: Validade unique session key and return linked customer data
      deprecated: false
      description: |-
        ### Clarify
        Could you explain this interface, we want to know how to use it and why use it
             
        This endpoint will be used in the integration of the web page that your team will develop.  

        The basic idea is:  
        - The customer will access a web page through a URL such as:  
          `www.paginawebhexing.com/uuid=xxx...`  
        - When the page is opened with this UUID in the URL, your system should call this endpoint, passing the same UUID.  
        - The endpoint validates the UUID and returns the necessary data for building the page.  

        The exact structure and set of returned data are still being defined.  
        The purpose of this endpoint is to ensure that the UUID is valid and to provide information needed to render the page correctly.  

        A more complete specification of the integration flow (including response fields and data mapping) will be provided later.
      tags:
        - Atendimento
      parameters:
        - name: uuid
          in: path
          description: Unique temporary session key
          required: true
          example: ""
          schema:
            type: string
      responses:
        "200":
          description: Valid session and return linked customer data
          content:
            application/json:
              schema:
                type: object
                properties:
                  session:
                    type: object
                    properties:
                      meterNumber:
                        type: string
                        example: "123456"
                      name:
                        type: string
                        example: João da Silva
                      address:
                        type: string
                        example: Rua Exemplo, 123
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  /api/v1/pre-payment/notification/recharge-status:
    post:
      summary: Notify the result of the recharge issuance to the meter
      deprecated: false
      description: |-
        After the vending system issues the token to the meter, it waits for the meter's communication result. Once vending receives the result, it returns it to Energisa.

        ### Clarify
        Energisa Question - We would like to know, on average, how long it takes to receive this notification after the first payment confirmation.
      tags:
        - Atendimento
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                rechargeStatus:
                  type: boolean
                  description: Recharge to Meter Status
                msg:
                  type: string
                msgId:
                  type: string
                  description: Same as QRCode interface
                  example: 3F2504E0-4F89-11D3-9A0C-0305E82C3301
                meterNumber:
                  type: string
                  description: Meter number
                  example: "123456789"
                units:
                  type: number
                  description: kWh
                  example: 115
                tokens:
                  type: string
                  description: If the issuance fails, the user can input the token through CIU
                  example: "783929502001239345673"
              required:
                - rechargeStatus
                - units
                - meterNumber
                - tokens
            examples: {}
      responses:
        "200":
          description: Recharge successfully completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Success detail
                    example: Notification successfully registered.
                  correlationId:
                    type: string
                    description: Correlation id registered in the notification (just for checking if necessary)
                    example: 3f2504e0-4f89-41d3-9a0c-0305e82c3301
          headers: {}
        "400":
          $ref: '#/components/responses/BadRequest'
        "500":
          $ref: '#/components/responses/InternalServerError'
      security: []
  '/{version}/Atendimento/{CodigoEmpresaWeb}/{Cdc}/{DigitoVerificador}/{TipoInteracao}/{CodigoAcao}':
    get:
      summary: Gera protocolo de atendimento ao cliente
      deprecated: false
      description: Gera protocolo de atendimento ao cliente.
      tags:
        - Atendimento
      parameters:
        - name: version
          in: path
          required: true
          schema:
            type: string
        - name: CodigoEmpresaWeb
          in: path
          required: true
          description: Empresa que consta o numero de cdc.
          schema:
            type: integer
            format: int32
        - name: Cdc
          in: path
          required: true
          description: Parte principal da identificação da UC.
          schema:
            type: integer
            format: int64
        - name: DigitoVerificador
          in: path
          required: true
          description: Dígito verificador da UC.
          schema:
            type: integer
            format: int32
        - name: TipoInteracao
          in: path
          required: true
          description: Tipo da interação a ser solicitada.
          schema:
            type: integer
            format: int32
        - name: CodigoAcao
          in: path
          required: true
          description: Ação informada para abertura do protocolo.
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "OK: Interação registrada com sucesso."
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/RetornoProtocoloResultadoObjeto'
        "400":
          description: "Requisição inválida."
        "401":
          description: Acesso não autorizado.
        "403":
          description: Usuário não autenticado.
        "405":
          description: WebService desabilitado
        "412":
          description: "ERRO: Não foi possível gerar a interação."
        "500":
          description: "Ocorreu um erro inesperado."
components:
  schemas: 
    CompanyId:
      type: string
      description: Energisa Company Identifier
      enum: [EMR, ESE, EPB, ETO, EMT, EMS, ESS, EAC, ERO]
    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          example: An error occurred.
        fields:
          type: array
          items:
            type: string
          description: Optional list of fields with errors (for 400)
        extraData:
          type: object
          description: Optional extra data for error context
    RetornoProtocoloResultadoObjeto:
      type: object
      properties:
        categoria:
          type: string
          nullable: true
          readOnly: true
  responses:
    BadRequest:
      description: Bad Request. The request could not be understood or was missing required parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalServerError:
      description: Internal Server Error. An unexpected error occurred on the server.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  securitySchemes: {}
servers:
  - url: http://dev-cn.your-api-server.com
    description: Development Environment
security: []
